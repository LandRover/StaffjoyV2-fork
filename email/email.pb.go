// Code generated by protoc-gen-gogo.
// source: email.proto
// DO NOT EDIT!

/*
Package email is a generated protocol buffer package.

It is generated from these files:
	email.proto

It has these top-level messages:
	EmailRequest
*/
package email

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type EmailRequest struct {
	To       string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Subject  string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	HtmlBody string `protobuf:"bytes,3,opt,name=html_body,json=htmlBody,proto3" json:"html_body,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *EmailRequest) Reset()                    { *m = EmailRequest{} }
func (m *EmailRequest) String() string            { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()               {}
func (*EmailRequest) Descriptor() ([]byte, []int) { return fileDescriptorEmail, []int{0} }

func init() {
	proto.RegisterType((*EmailRequest)(nil), "staffjoy.email.EmailRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EmailService service

type EmailServiceClient interface {
	Send(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type emailServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmailServiceClient(cc *grpc.ClientConn) EmailServiceClient {
	return &emailServiceClient{cc}
}

func (c *emailServiceClient) Send(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/staffjoy.email.EmailService/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EmailService service

type EmailServiceServer interface {
	Send(context.Context, *EmailRequest) (*google_protobuf.Empty, error)
}

func RegisterEmailServiceServer(s *grpc.Server, srv EmailServiceServer) {
	s.RegisterService(&_EmailService_serviceDesc, srv)
}

func _EmailService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staffjoy.email.EmailService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).Send(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "staffjoy.email.EmailService",
	HandlerType: (*EmailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _EmailService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email.proto",
}

func init() { proto.RegisterFile("email.proto", fileDescriptorEmail) }

var fileDescriptorEmail = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8e, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x69, 0x88, 0x80, 0x1a, 0xd4, 0xe1, 0x06, 0x30, 0x2d, 0x03, 0xea, 0xc4, 0xe4, 0x48,
	0xb0, 0x33, 0x54, 0xea, 0xca, 0xd0, 0x6e, 0x2c, 0x28, 0xb6, 0x2f, 0x25, 0x55, 0x9c, 0x0b, 0xc9,
	0x05, 0xc9, 0xff, 0x1e, 0xe5, 0x42, 0x04, 0xdd, 0xec, 0xef, 0xbd, 0xbb, 0xfb, 0xd4, 0x35, 0x86,
	0xbc, 0xac, 0x4c, 0xd3, 0x12, 0x13, 0x2c, 0x3a, 0xce, 0x8b, 0xe2, 0x48, 0xd1, 0x08, 0x5d, 0xae,
	0x0e, 0x44, 0x87, 0x0a, 0x33, 0x49, 0x6d, 0x5f, 0x64, 0x18, 0x1a, 0x8e, 0x63, 0x79, 0x5d, 0xaa,
	0x9b, 0xed, 0xd0, 0xda, 0xe1, 0x57, 0x8f, 0x1d, 0xc3, 0x42, 0x25, 0x4c, 0x7a, 0xf6, 0x38, 0x7b,
	0x9a, 0xef, 0x12, 0x26, 0xd0, 0xea, 0xb2, 0xeb, 0xed, 0x11, 0x1d, 0xeb, 0x44, 0xe0, 0xf4, 0x85,
	0x95, 0x9a, 0x7f, 0x72, 0xa8, 0x3e, 0x2c, 0xf9, 0xa8, 0xcf, 0x25, 0xbb, 0x1a, 0xc0, 0x86, 0x7c,
	0x04, 0x50, 0x69, 0x9d, 0x07, 0xd4, 0xa9, 0x70, 0x79, 0x3f, 0xbf, 0xfd, 0x9e, 0xda, 0x63, 0xfb,
	0x5d, 0x3a, 0x84, 0x57, 0x95, 0xee, 0xb1, 0xf6, 0xf0, 0x60, 0x4e, 0x85, 0xcd, 0x7f, 0xa1, 0xe5,
	0xad, 0x19, 0xf5, 0xcd, 0xa4, 0x6f, 0xb6, 0x83, 0xfe, 0xfa, 0x6c, 0x73, 0xff, 0x7e, 0xe7, 0xc8,
	0xe3, 0xdf, 0xb4, 0xa3, 0x90, 0xc9, 0x06, 0x7b, 0x21, 0xe5, 0x97, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xf3, 0xae, 0x41, 0x81, 0x18, 0x01, 0x00, 0x00,
}
