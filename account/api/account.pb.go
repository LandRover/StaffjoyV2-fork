// Code generated by protoc-gen-go.
// source: account.proto
// DO NOT EDIT!

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	account.proto

It has these top-level messages:
	Account
	UpdatePasswordRequest
	VerifyPasswordRequest
	AccountList
	GetAccountListRequest
	CreateAccountRequest
	GetAccountRequest
	GetAccountByPhonenumberRequest
	PasswordResetRequest
	EmailChangeRequest
	EmailConfirmation
	GetOrCreateRequest
	TrackEventRequest
	SyncUserRequest
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/gogo/protobuf/gogoproto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	Uuid               string                      `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name               string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email              string                      `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	ConfirmedAndActive bool                        `protobuf:"varint,4,opt,name=confirmed_and_active,json=confirmedAndActive" json:"confirmed_and_active,omitempty"`
	MemberSince        *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=member_since,json=memberSince" json:"member_since,omitempty"`
	Support            bool                        `protobuf:"varint,6,opt,name=support" json:"support,omitempty"`
	Phonenumber        string                      `protobuf:"bytes,7,opt,name=phonenumber" json:"phonenumber,omitempty"`
	PhotoUrl           string                      `protobuf:"bytes,8,opt,name=photo_url,json=photoUrl" json:"photo_url,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetConfirmedAndActive() bool {
	if m != nil {
		return m.ConfirmedAndActive
	}
	return false
}

func (m *Account) GetMemberSince() *google_protobuf1.Timestamp {
	if m != nil {
		return m.MemberSince
	}
	return nil
}

func (m *Account) GetSupport() bool {
	if m != nil {
		return m.Support
	}
	return false
}

func (m *Account) GetPhonenumber() string {
	if m != nil {
		return m.Phonenumber
	}
	return ""
}

func (m *Account) GetPhotoUrl() string {
	if m != nil {
		return m.PhotoUrl
	}
	return ""
}

type UpdatePasswordRequest struct {
	Uuid     string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *UpdatePasswordRequest) Reset()                    { *m = UpdatePasswordRequest{} }
func (m *UpdatePasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePasswordRequest) ProtoMessage()               {}
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UpdatePasswordRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UpdatePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type VerifyPasswordRequest struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *VerifyPasswordRequest) Reset()                    { *m = VerifyPasswordRequest{} }
func (m *VerifyPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*VerifyPasswordRequest) ProtoMessage()               {}
func (*VerifyPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *VerifyPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *VerifyPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AccountList struct {
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	Limit    int32      `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset   int32      `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
}

func (m *AccountList) Reset()                    { *m = AccountList{} }
func (m *AccountList) String() string            { return proto.CompactTextString(m) }
func (*AccountList) ProtoMessage()               {}
func (*AccountList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AccountList) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *AccountList) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AccountList) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GetAccountListRequest struct {
	Offset int32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *GetAccountListRequest) Reset()                    { *m = GetAccountListRequest{} }
func (m *GetAccountListRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountListRequest) ProtoMessage()               {}
func (*GetAccountListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetAccountListRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetAccountListRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type CreateAccountRequest struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Phonenumber string `protobuf:"bytes,3,opt,name=phonenumber" json:"phonenumber,omitempty"`
}

func (m *CreateAccountRequest) Reset()                    { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()               {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateAccountRequest) GetPhonenumber() string {
	if m != nil {
		return m.Phonenumber
	}
	return ""
}

type GetAccountRequest struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *GetAccountRequest) Reset()                    { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()               {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetAccountRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type GetAccountByPhonenumberRequest struct {
	Phonenumber string `protobuf:"bytes,1,opt,name=phonenumber" json:"phonenumber,omitempty"`
}

func (m *GetAccountByPhonenumberRequest) Reset()                    { *m = GetAccountByPhonenumberRequest{} }
func (m *GetAccountByPhonenumberRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountByPhonenumberRequest) ProtoMessage()               {}
func (*GetAccountByPhonenumberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetAccountByPhonenumberRequest) GetPhonenumber() string {
	if m != nil {
		return m.Phonenumber
	}
	return ""
}

type PasswordResetRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
}

func (m *PasswordResetRequest) Reset()                    { *m = PasswordResetRequest{} }
func (m *PasswordResetRequest) String() string            { return proto.CompactTextString(m) }
func (*PasswordResetRequest) ProtoMessage()               {}
func (*PasswordResetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PasswordResetRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type EmailChangeRequest struct {
	Uuid  string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *EmailChangeRequest) Reset()                    { *m = EmailChangeRequest{} }
func (m *EmailChangeRequest) String() string            { return proto.CompactTextString(m) }
func (*EmailChangeRequest) ProtoMessage()               {}
func (*EmailChangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *EmailChangeRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *EmailChangeRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type EmailConfirmation struct {
	Uuid  string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *EmailConfirmation) Reset()                    { *m = EmailConfirmation{} }
func (m *EmailConfirmation) String() string            { return proto.CompactTextString(m) }
func (*EmailConfirmation) ProtoMessage()               {}
func (*EmailConfirmation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *EmailConfirmation) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *EmailConfirmation) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type GetOrCreateRequest struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Phonenumber string `protobuf:"bytes,3,opt,name=phonenumber" json:"phonenumber,omitempty"`
}

func (m *GetOrCreateRequest) Reset()                    { *m = GetOrCreateRequest{} }
func (m *GetOrCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrCreateRequest) ProtoMessage()               {}
func (*GetOrCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetOrCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetOrCreateRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetOrCreateRequest) GetPhonenumber() string {
	if m != nil {
		return m.Phonenumber
	}
	return ""
}

type TrackEventRequest struct {
	Uuid  string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Event string `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *TrackEventRequest) Reset()                    { *m = TrackEventRequest{} }
func (m *TrackEventRequest) String() string            { return proto.CompactTextString(m) }
func (*TrackEventRequest) ProtoMessage()               {}
func (*TrackEventRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *TrackEventRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *TrackEventRequest) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

type SyncUserRequest struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *SyncUserRequest) Reset()                    { *m = SyncUserRequest{} }
func (m *SyncUserRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncUserRequest) ProtoMessage()               {}
func (*SyncUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SyncUserRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "account.Account")
	proto.RegisterType((*UpdatePasswordRequest)(nil), "account.UpdatePasswordRequest")
	proto.RegisterType((*VerifyPasswordRequest)(nil), "account.VerifyPasswordRequest")
	proto.RegisterType((*AccountList)(nil), "account.AccountList")
	proto.RegisterType((*GetAccountListRequest)(nil), "account.GetAccountListRequest")
	proto.RegisterType((*CreateAccountRequest)(nil), "account.CreateAccountRequest")
	proto.RegisterType((*GetAccountRequest)(nil), "account.GetAccountRequest")
	proto.RegisterType((*GetAccountByPhonenumberRequest)(nil), "account.GetAccountByPhonenumberRequest")
	proto.RegisterType((*PasswordResetRequest)(nil), "account.PasswordResetRequest")
	proto.RegisterType((*EmailChangeRequest)(nil), "account.EmailChangeRequest")
	proto.RegisterType((*EmailConfirmation)(nil), "account.EmailConfirmation")
	proto.RegisterType((*GetOrCreateRequest)(nil), "account.GetOrCreateRequest")
	proto.RegisterType((*TrackEventRequest)(nil), "account.TrackEventRequest")
	proto.RegisterType((*SyncUserRequest)(nil), "account.SyncUserRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountService service

type AccountServiceClient interface {
	Create(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error)
	List(ctx context.Context, in *GetAccountListRequest, opts ...grpc.CallOption) (*AccountList, error)
	Get(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*Account, error)
	Update(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error)
	UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	RequestPasswordReset(ctx context.Context, in *PasswordResetRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	RequestEmailChange(ctx context.Context, in *EmailChangeRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	VerifyPassword(ctx context.Context, in *VerifyPasswordRequest, opts ...grpc.CallOption) (*Account, error)
	ChangeEmail(ctx context.Context, in *EmailConfirmation, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	GetOrCreate(ctx context.Context, in *GetOrCreateRequest, opts ...grpc.CallOption) (*Account, error)
	GetAccountByPhonenumber(ctx context.Context, in *GetAccountByPhonenumberRequest, opts ...grpc.CallOption) (*Account, error)
	TrackEvent(ctx context.Context, in *TrackEventRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
	SyncUser(ctx context.Context, in *SyncUserRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) Create(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) List(ctx context.Context, in *GetAccountListRequest, opts ...grpc.CallOption) (*AccountList, error) {
	out := new(AccountList)
	err := grpc.Invoke(ctx, "/account.AccountService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Get(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Update(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/UpdatePassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) RequestPasswordReset(ctx context.Context, in *PasswordResetRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/RequestPasswordReset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) RequestEmailChange(ctx context.Context, in *EmailChangeRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/RequestEmailChange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) VerifyPassword(ctx context.Context, in *VerifyPasswordRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/VerifyPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ChangeEmail(ctx context.Context, in *EmailConfirmation, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/ChangeEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetOrCreate(ctx context.Context, in *GetOrCreateRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/GetOrCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccountByPhonenumber(ctx context.Context, in *GetAccountByPhonenumberRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/GetAccountByPhonenumber", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) TrackEvent(ctx context.Context, in *TrackEventRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/TrackEvent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) SyncUser(ctx context.Context, in *SyncUserRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/SyncUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountService service

type AccountServiceServer interface {
	Create(context.Context, *CreateAccountRequest) (*Account, error)
	List(context.Context, *GetAccountListRequest) (*AccountList, error)
	Get(context.Context, *GetAccountRequest) (*Account, error)
	Update(context.Context, *Account) (*Account, error)
	UpdatePassword(context.Context, *UpdatePasswordRequest) (*google_protobuf2.Empty, error)
	RequestPasswordReset(context.Context, *PasswordResetRequest) (*google_protobuf2.Empty, error)
	RequestEmailChange(context.Context, *EmailChangeRequest) (*google_protobuf2.Empty, error)
	VerifyPassword(context.Context, *VerifyPasswordRequest) (*Account, error)
	ChangeEmail(context.Context, *EmailConfirmation) (*google_protobuf2.Empty, error)
	GetOrCreate(context.Context, *GetOrCreateRequest) (*Account, error)
	GetAccountByPhonenumber(context.Context, *GetAccountByPhonenumberRequest) (*Account, error)
	TrackEvent(context.Context, *TrackEventRequest) (*google_protobuf2.Empty, error)
	SyncUser(context.Context, *SyncUserRequest) (*google_protobuf2.Empty, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Create(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).List(ctx, req.(*GetAccountListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Get(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Update(ctx, req.(*Account))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UpdatePassword(ctx, req.(*UpdatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_RequestPasswordReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).RequestPasswordReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/RequestPasswordReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).RequestPasswordReset(ctx, req.(*PasswordResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_RequestEmailChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).RequestEmailChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/RequestEmailChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).RequestEmailChange(ctx, req.(*EmailChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_VerifyPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).VerifyPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/VerifyPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).VerifyPassword(ctx, req.(*VerifyPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ChangeEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailConfirmation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ChangeEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/ChangeEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ChangeEmail(ctx, req.(*EmailConfirmation))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetOrCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetOrCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GetOrCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetOrCreate(ctx, req.(*GetOrCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAccountByPhonenumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountByPhonenumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccountByPhonenumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GetAccountByPhonenumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccountByPhonenumber(ctx, req.(*GetAccountByPhonenumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_TrackEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrackEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).TrackEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/TrackEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).TrackEvent(ctx, req.(*TrackEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_SyncUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).SyncUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/SyncUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).SyncUser(ctx, req.(*SyncUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AccountService_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _AccountService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _AccountService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AccountService_Update_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _AccountService_UpdatePassword_Handler,
		},
		{
			MethodName: "RequestPasswordReset",
			Handler:    _AccountService_RequestPasswordReset_Handler,
		},
		{
			MethodName: "RequestEmailChange",
			Handler:    _AccountService_RequestEmailChange_Handler,
		},
		{
			MethodName: "VerifyPassword",
			Handler:    _AccountService_VerifyPassword_Handler,
		},
		{
			MethodName: "ChangeEmail",
			Handler:    _AccountService_ChangeEmail_Handler,
		},
		{
			MethodName: "GetOrCreate",
			Handler:    _AccountService_GetOrCreate_Handler,
		},
		{
			MethodName: "GetAccountByPhonenumber",
			Handler:    _AccountService_GetAccountByPhonenumber_Handler,
		},
		{
			MethodName: "TrackEvent",
			Handler:    _AccountService_TrackEvent_Handler,
		},
		{
			MethodName: "SyncUser",
			Handler:    _AccountService_SyncUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}

func init() { proto.RegisterFile("account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 961 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6a, 0xe3, 0x46,
	0x14, 0x8e, 0xf2, 0xe3, 0x38, 0xc7, 0x59, 0x37, 0x9e, 0x3a, 0xbb, 0x5a, 0x65, 0x63, 0x79, 0x87,
	0x96, 0x84, 0xa5, 0xb5, 0x68, 0x0a, 0xbd, 0x58, 0xd8, 0x85, 0x38, 0x35, 0xa1, 0x74, 0x21, 0x41,
	0xd9, 0xec, 0x45, 0x29, 0xa4, 0xb2, 0x3c, 0x76, 0xd4, 0x5a, 0x1a, 0xad, 0x34, 0x4a, 0x31, 0xa5,
	0x37, 0x7d, 0x82, 0x85, 0x3e, 0x4d, 0xdf, 0x60, 0x2f, 0x0b, 0xbd, 0x77, 0x4b, 0xe8, 0x13, 0xf8,
	0x09, 0xca, 0x8c, 0x46, 0xb2, 0x6c, 0x8f, 0x0d, 0xbd, 0xd8, 0x3b, 0xcd, 0x9c, 0xef, 0xfb, 0xce,
	0x99, 0xf3, 0x67, 0xc3, 0x03, 0xc7, 0x75, 0x69, 0x12, 0xb0, 0x56, 0x18, 0x51, 0x46, 0xd1, 0xb6,
	0x3c, 0x1a, 0x4f, 0x06, 0x94, 0x0e, 0x86, 0xc4, 0x72, 0x42, 0xcf, 0x72, 0x82, 0x80, 0x32, 0x87,
	0x79, 0x34, 0x88, 0x53, 0x98, 0x61, 0x4a, 0xab, 0x38, 0x75, 0x93, 0xbe, 0xc5, 0x3c, 0x9f, 0xc4,
	0xcc, 0xf1, 0x43, 0x09, 0x38, 0x98, 0x07, 0x10, 0x3f, 0x64, 0x23, 0x69, 0xfc, 0x7c, 0xe0, 0xb1,
	0xdb, 0xa4, 0xdb, 0x72, 0xa9, 0x6f, 0x0d, 0xe8, 0x80, 0x4e, 0x51, 0xfc, 0x24, 0x0e, 0xe2, 0x2b,
	0x85, 0xe3, 0x3f, 0x36, 0x60, 0xfb, 0x34, 0x0d, 0x0b, 0x3d, 0x85, 0xcd, 0x24, 0xf1, 0x7a, 0xba,
	0xd6, 0xd4, 0x8e, 0x77, 0xda, 0x0f, 0x26, 0x63, 0x73, 0xa7, 0xd7, 0x7d, 0x8e, 0xf9, 0x1d, 0xb6,
	0x85, 0x89, 0x43, 0x02, 0xc7, 0x27, 0xfa, 0xfa, 0x2c, 0x84, 0xdf, 0x61, 0x5b, 0x98, 0xd0, 0x27,
	0xb0, 0x45, 0x7c, 0xc7, 0x1b, 0xea, 0x1b, 0x02, 0x53, 0x9d, 0x8c, 0x4d, 0xe0, 0x18, 0x71, 0x89,
	0xed, 0xd4, 0x88, 0x2e, 0xa0, 0xee, 0xd2, 0xa0, 0xef, 0x45, 0x3e, 0xe9, 0xdd, 0x38, 0x41, 0xef,
	0xc6, 0x71, 0x99, 0x77, 0x47, 0xf4, 0xcd, 0xa6, 0x76, 0x5c, 0x6e, 0x1f, 0x4e, 0xc6, 0xe6, 0x63,
	0x4e, 0x52, 0x61, 0xb0, 0x8d, 0xf2, 0xeb, 0xd3, 0xa0, 0x77, 0x2a, 0x2e, 0xd1, 0xf7, 0xb0, 0xeb,
	0x13, 0xbf, 0x4b, 0xa2, 0x9b, 0xd8, 0x0b, 0x5c, 0xa2, 0x6f, 0x35, 0xb5, 0xe3, 0xca, 0x89, 0xd1,
	0x4a, 0x73, 0xd5, 0xca, 0xb2, 0xd0, 0x7a, 0x9d, 0x25, 0xb3, 0x7d, 0xf8, 0x7e, 0x6c, 0xae, 0x4d,
	0xc6, 0x66, 0x8d, 0x3b, 0x2a, 0x72, 0xf1, 0xbb, 0xbf, 0x4d, 0xcd, 0xae, 0xa4, 0x57, 0x57, 0xfc,
	0x06, 0x3d, 0x83, 0xed, 0x38, 0x09, 0x43, 0x1a, 0x31, 0xbd, 0x24, 0x22, 0xdc, 0x9b, 0x8c, 0xcd,
	0x5d, 0x4e, 0x94, 0xd7, 0xd8, 0xce, 0x00, 0xe8, 0x2b, 0xa8, 0x84, 0xb7, 0x34, 0x20, 0x41, 0xc2,
	0xf9, 0xfa, 0xb6, 0x48, 0x43, 0x7d, 0x32, 0x36, 0xf7, 0x38, 0xbe, 0x60, 0xc2, 0x76, 0x11, 0x88,
	0x2c, 0xd8, 0x09, 0x6f, 0x29, 0xa3, 0x37, 0x49, 0x34, 0xd4, 0xcb, 0x82, 0x85, 0x26, 0x63, 0xb3,
	0x2a, 0x59, 0xa9, 0x01, 0xdb, 0x65, 0xf1, 0x7d, 0x1d, 0x0d, 0xf1, 0x39, 0xec, 0x5f, 0x87, 0x3d,
	0x87, 0x91, 0x4b, 0x27, 0x8e, 0x7f, 0xa6, 0x51, 0xcf, 0x26, 0x6f, 0x13, 0x12, 0x33, 0x84, 0x8a,
	0x85, 0x94, 0x95, 0x33, 0xa0, 0x1c, 0x4a, 0x58, 0x5a, 0x3d, 0x3b, 0x3f, 0xe3, 0x6f, 0x60, 0xff,
	0x0d, 0x89, 0xbc, 0xfe, 0x68, 0x5e, 0xa8, 0x9e, 0xd5, 0x32, 0x55, 0x92, 0xb5, 0x5b, 0x25, 0x45,
	0xa1, 0x22, 0xdb, 0xe9, 0x95, 0x17, 0x33, 0x74, 0x02, 0x65, 0xd9, 0xf4, 0xb1, 0xae, 0x35, 0x37,
	0x8e, 0x2b, 0x27, 0x7b, 0xad, 0x6c, 0x28, 0x24, 0xae, 0xbd, 0xc9, 0xeb, 0x60, 0xe7, 0x38, 0xee,
	0x74, 0xe8, 0xf9, 0x1e, 0x13, 0xda, 0x5b, 0x76, 0x7a, 0x40, 0x0f, 0xa1, 0x44, 0xfb, 0xfd, 0x98,
	0x30, 0xd1, 0x57, 0x5b, 0xb6, 0x3c, 0xe1, 0x0e, 0xec, 0x9f, 0x13, 0x56, 0xf0, 0x99, 0xc5, 0x3e,
	0x25, 0x68, 0x45, 0x82, 0x5a, 0x1e, 0x77, 0xa1, 0x7e, 0x16, 0x11, 0x87, 0x11, 0xa9, 0x54, 0x48,
	0xa5, 0x68, 0x78, 0x99, 0x4a, 0xd1, 0xe1, 0x79, 0x56, 0xd6, 0x8b, 0x59, 0x69, 0xce, 0x96, 0x5d,
	0x74, 0xff, 0x4c, 0x81, 0xf1, 0x11, 0xd4, 0xa6, 0xa1, 0xae, 0xa8, 0x15, 0x6e, 0x43, 0x63, 0x0a,
	0x6c, 0x8f, 0x2e, 0xa7, 0x1a, 0x19, 0x6b, 0xce, 0x99, 0xb6, 0xe8, 0xec, 0x33, 0xa8, 0x4f, 0xab,
	0x19, 0x13, 0xb6, 0xb2, 0xa4, 0xf8, 0x25, 0xa0, 0x0e, 0xff, 0x38, 0xbb, 0x75, 0x82, 0x01, 0x59,
	0xd5, 0x47, 0xca, 0xc7, 0xe3, 0x17, 0x50, 0x4b, 0xf9, 0xe9, 0x60, 0x8a, 0x7d, 0xf6, 0x3f, 0xe8,
	0x3f, 0x00, 0x3a, 0x27, 0xec, 0x22, 0x4a, 0x4b, 0xf0, 0x21, 0x72, 0xff, 0x02, 0x6a, 0xaf, 0x23,
	0xc7, 0xfd, 0xa9, 0x73, 0x47, 0x56, 0xe6, 0x5e, 0x38, 0xe0, 0x98, 0xdc, 0x01, 0x3f, 0xe0, 0x4f,
	0xe1, 0xa3, 0xab, 0x51, 0xe0, 0x5e, 0xc7, 0xd3, 0x12, 0x28, 0xc8, 0x27, 0xef, 0xca, 0x50, 0x95,
	0x65, 0xbb, 0x22, 0xd1, 0x9d, 0xe7, 0x12, 0x64, 0x43, 0x29, 0x7d, 0x15, 0x3a, 0xcc, 0x3b, 0x5f,
	0xd5, 0x69, 0xc6, 0xc2, 0x60, 0xe0, 0x47, 0xbf, 0xfd, 0xf5, 0xef, 0xef, 0xeb, 0x35, 0xbc, 0x6b,
	0xdd, 0x7d, 0x61, 0x65, 0xe3, 0xf1, 0x5c, 0x7b, 0x86, 0x6c, 0xd8, 0x14, 0xd3, 0xd5, 0xc8, 0x29,
	0xca, 0x11, 0x30, 0xea, 0xf3, 0x92, 0xdc, 0x88, 0xeb, 0x42, 0xb6, 0x8a, 0x66, 0x64, 0xd1, 0x25,
	0x6c, 0x9c, 0x13, 0x86, 0x0c, 0x85, 0xe4, 0xf2, 0x08, 0x0f, 0x84, 0xd4, 0x3e, 0xfa, 0xb8, 0x28,
	0x65, 0xfd, 0xc2, 0x73, 0xf1, 0x2b, 0x7a, 0x05, 0xa5, 0x74, 0x3d, 0xa1, 0x05, 0xa2, 0x42, 0xaa,
	0x21, 0xa4, 0x74, 0x43, 0x25, 0xc5, 0xdf, 0xfc, 0x16, 0xaa, 0xb3, 0xcb, 0xae, 0xf0, 0x7a, 0xe5,
	0x16, 0x34, 0x1e, 0x2e, 0xec, 0xfe, 0x0e, 0xff, 0x9d, 0xc4, 0x47, 0xc2, 0xd3, 0x53, 0xe3, 0x89,
	0xc2, 0x93, 0x95, 0x2d, 0x32, 0xee, 0xf2, 0x02, 0xea, 0x52, 0x6b, 0x66, 0x92, 0x0a, 0x85, 0x54,
	0x4d, 0xd8, 0x52, 0xbf, 0x6b, 0xe8, 0x5b, 0x40, 0x12, 0x54, 0x18, 0x36, 0x74, 0x90, 0xcb, 0x2d,
	0x8e, 0xe0, 0x0a, 0xb1, 0xaf, 0xa1, 0x3a, 0xbb, 0xb4, 0x0b, 0x09, 0x51, 0x6e, 0x73, 0x45, 0xd2,
	0xd7, 0xd0, 0x19, 0x54, 0x52, 0x87, 0x9d, 0x74, 0xb5, 0xcf, 0xc5, 0x52, 0x18, 0xe7, 0x15, 0xa1,
	0xbc, 0x84, 0x4a, 0x61, 0x7c, 0x0b, 0x0f, 0x5a, 0x1c, 0x6a, 0x65, 0x10, 0x6f, 0xe0, 0xd1, 0x92,
	0x7d, 0x87, 0x8e, 0x14, 0xfd, 0xa8, 0xda, 0x88, 0x4a, 0xdd, 0x36, 0xc0, 0x74, 0xe8, 0x0b, 0x6f,
	0x5b, 0xd8, 0x04, 0x2b, 0xdf, 0x56, 0xce, 0x26, 0x1f, 0xe9, 0xb9, 0xc2, 0xdc, 0x32, 0x58, 0xce,
	0x6f, 0x1f, 0xbd, 0xbf, 0x6f, 0x68, 0x7f, 0xde, 0x37, 0xb4, 0x7f, 0xee, 0x1b, 0xda, 0x77, 0x8f,
	0x5d, 0xda, 0x23, 0xad, 0x98, 0x39, 0xfd, 0xfe, 0x8f, 0x74, 0x24, 0xfe, 0xa4, 0x49, 0xc9, 0x6e,
	0x49, 0x50, 0xbf, 0xfc, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x50, 0x4a, 0x99, 0x35, 0x0a, 0x00,
	0x00,
}
